// Generated by Dagger (https://google.github.io/dagger).
package com.example.svgwithmvi.model;

import com.example.testproject.shapehandler.ShapeManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class SVGModel_Factory implements Factory<SVGModel> {
  private final Provider<ShapeManager> shapeProvider;

  public SVGModel_Factory(Provider<ShapeManager> shapeProvider) {
    this.shapeProvider = shapeProvider;
  }

  @Override
  public SVGModel get() {
    return provideInstance(shapeProvider);
  }

  public static SVGModel provideInstance(Provider<ShapeManager> shapeProvider) {
    return new SVGModel(shapeProvider.get());
  }

  public static SVGModel_Factory create(Provider<ShapeManager> shapeProvider) {
    return new SVGModel_Factory(shapeProvider);
  }

  public static SVGModel newSVGModel(ShapeManager shapeProvider) {
    return new SVGModel(shapeProvider);
  }
}
